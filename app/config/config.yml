imports:
    - { resource: parameters.yml }
    - { resource: security.yml }
    - { resource: services.yml }

# Put parameters here that don't need to change on each machine where the app is deployed
# http://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    locale: en

framework:
    fragments: { path: /_fragment }
    esi:             ~
    #translator:      { fallbacks: ["%locale%"] }
    secret:          "%secret%"
    router:
        resource: "%kernel.root_dir%/config/routing.yml"
        strict_requirements: ~
    form:            ~
    csrf_protection: ~
    validation:      { enable_annotations: true }
    serializer:      { enable_annotations: true }
    templating:
        engines: ['twig']
    default_locale:  "%locale%"
    trusted_hosts:   ~
    trusted_proxies: ~
    session:
        # http://symfony.com/doc/current/reference/configuration/framework.html#handler-id
        handler_id:  session.handler.native_file
        save_path:   "%kernel.root_dir%/../var/sessions/%kernel.environment%"
        name: dictionary
    http_method_override: true
    assets: ~

# Twig Configuration
twig:
    debug:            "%kernel.debug%"
    strict_variables: "%kernel.debug%"

# Doctrine Configuration
doctrine:
    dbal:
        driver:   pdo_mysql
        host:     "%database_host%"
        port:     "%database_port%"
        dbname:   "%database_name%"
        user:     "%database_user%"
        password: "%database_password%"
        charset:  UTF8
        server_version: 5.7
    orm:
        auto_generate_proxy_classes: "%kernel.debug%"
        naming_strategy: doctrine.orm.naming_strategy.underscore
        auto_mapping: true

# Swiftmailer Configuration
swiftmailer:
    transport: "%mailer_transport%"
    host:      "%mailer_host%"
    username:  "%mailer_user%"
    password:  "%mailer_password%"
    spool:     { type: memory }

fos_rest:
    versioning:
        enabled: true
        guessing_order:
            - query
            - custom_header
    serializer:
        version:              null
        groups:               []
        serialize_null:       true
    format_listener:
        enabled: true
        rules:
            - { path: '^/', priorities: ['html', 'json'], fallback_format: json }
    service:
        view_handler: fos_rest.view_handler.default
    view:
        mime_types:
            json: ['application/json; charset=UTF-8', 'application/json']

nelmio_cors:
    defaults:
        allow_credentials: false
        allow_origin: []
        allow_headers: []
        allow_methods: []
        expose_headers: []
        max_age: 0
        hosts: []
        origin_regex: false
        forced_allow_origin_value: ~
    paths:
        '^/':
            allow_origin: ['*']
            allow_headers: ['*']
            allow_methods: ['POST', 'PUT', 'GET', 'DELETE', 'OPTIONS']
            max_age: 3600

fos_http_cache:
    tags:
        enabled: true
    cache_manager:
        enabled: true
    proxy_client:
        varnish:
            tags_header: My-Cache-Tags
            header_length: 2048
            http:
                servers:
                    - dictionary-varnish:6081
                base_url: 127.0.0.1

old_sound_rabbit_mq:
    connections:
        default:
            host: "%rabbitmq_host%"
            port: "%rabbitmq_port%"
            user: "%rabbitmq_user%"
            password: "%rabbitmq_password%"
            vhost: /
    producers:
        word:
            connection: default
            exchange_options:
                name: 'dictionary-exchange'
                type: fanout

lexik_jwt_authentication:
    private_key_path: '%jwt_private_key_path%'
    public_key_path:  '%jwt_public_key_path%'
    pass_phrase:      '%jwt_key_pass_phrase%'
    token_ttl:        '%jwt_token_ttl%'
